import React from 'react';
import { Image, StyleSheet, View, Text, ScrollView, ActivityIndicator } from 'react-native';
import LinearGradient from 'react-native-linear-gradient';
import { Auth } from 'aws-amplify';
import { MenuProvider } from 'react-native-popup-menu';

import Modal from 'react-native-modal';
import QRCode from 'react-native-qrcode-svg';
import Icon from 'react-native-vector-icons/FontAwesome';

import { fetchUserData, searchuserBackend } from './database/datafetch'
import { TouchableOpacity } from 'react-native-gesture-handler';

import { setToken, getToken } from './async_storage'


import {
  Menu,
  MenuOptions,
  MenuOption,
  MenuTrigger,
} from 'react-native-popup-menu';


export default class Id extends React.Component {

  constructor(props) {
    super(props);

    /*State variables used throughout the class React.Component
    Please view https://www.geeksforgeeks.org/component-state-react-native/ for more details on using state varibles */
    this.state = {
      keycloakUser: props.route.params.userEmail,
      userSub: '',
      fullName: 'N/A',
      smartID: 'N/A',
      dateofBirth: 'N/A',
      countryRes: 'N/A',
      validDate: 'N/A',
      countryOrigin: 'N/A',
      licenceState: 'N/A',
      affiliation: 'N/A',
      isLoading: true,
      isQRcodeVisible: false,


      isSupportPageVisible: false
    }
  }

  //function used to update the variables
  //val is the value and prop is the name of the variable
  updateInputVal = (val, prop) => {
    const state = this.state;
    state[prop] = val;
    this.setState(state);
  }

  /* Builtin React Native function which is called AFTER the FIRST render of the page
  Please view https://reactjs.org/docs/react-component.html for more detail */
  async componentDidMount() {

    //Getting current user
    await this.currentUser()

    try {
      //Fetching data from ArangoDB database w/ userSub as key. View datafetch.js for more detail

      /* Commented out this section to avoid issues with the ArangoDB/API instance being down. 
      Uncomment when the team has the DB up and running again */
      let data = await fetchUserData(this.state.userSub)

      // //fill in data components after successful data fetch
      this.updateInputVal(data.FirstName + ' ' + data.LastName, 'fullName')
      this.updateInputVal(data.dateofBirth, 'dateofBirth')
      this.updateInputVal(data.smartID, 'smartID')



      //Data has been fetched. Remove loading screen
      this.setState({
        isLoading: false,
      })

    } catch (e) {
      //If error is caught, server is currently down. Send user to serverDown page
      console.log(e)
      this.props.navigation.navigate('ServerDown')
    }

  }

  //check if user is authenticated
  isAuthenticated = async () => {
    try {
      await Auth.currentSession();
      return true;
    } catch {
      return false;
    }
  }

  /* currentUser gets the current information from the current AWS Cognito user */
  currentUser = async () => {

    try {

      //Built-in Amplify function https://aws-amplify.github.io/amplify-js/api/classes/authclass.html#currentauthenticateduser
      //const cognitoUser = await Auth.currentAuthenticatedUser();
      const keycloakUser = await searchuserBackend(this.state.keycloakUser)
      //Getting cognitoUser information and sacing userSub(Autogenerated AWS Cognito ID)
      this.updateInputVal(keycloakUser.id, 'userSub')
      this.updateInputVal(keycloakUser, 'keycloakUser')
      // Logged for testing purposes. Contains a large structure of cognito user information. Uncomment to view in console.
      // console.log(cognitoUser)

    } catch (e) {

      // If an error is caught, print error and send usr back to login page
      // Change situation if needed
      console.log(e)
      this.props.navigation.navigate('Login')
    }


  }


  // Function used to signout user
  // View https://docs.amplify.aws/lib/auth/emailpassword/q/platform/js for more information 
  signOut = async () => {
    try {
      await setToken('@auth_token', '')
      this.props.navigation.navigate('Login')
    } catch (error) {
      console.log('error signing out: ', error);
    }
  }



  render() {

    //Loading screen if loading variable is true
    if (this.state.isLoading) {
      return (
        <View style={styles.preloader}>
          <ActivityIndicator size="large" color="#9E9E9E" />
        </View>
      )
    }

    //HTML/CSS style for screen
    return (
      <View style={styles.container}>
        {/* <LinearGradient colors={['#003cb3', '#1a66ff', '#80aaff','#e6eeff']} style={styles.linearGradient}> */}
        <View style={{ position: 'absolute', top: '5%', left: 15, padding: 0, width: '50%', height: '50%', zIndex: 2, }}>
          <MenuProvider>
            <View>
              <Menu>
                <MenuTrigger style={{ width: '13%' }}>
                  <View style={{ width: 30 }}>
                    <TouchableOpacity>
                      <Icon size={30} name="cog" color="#e3d966" backgroundColor="#4c52ba" ></Icon>
                    </TouchableOpacity>
                  </View>

                </MenuTrigger>

                <MenuOptions>
                  <MenuOption onSelect={() => this.signOut()} >
                    <Text style={{ fontSize: 18, marginVertical: 10 }}>
                      Logout
                    </Text>
                  </MenuOption>
                  <MenuOption>
                    <Text style={{ fontSize: 18, marginVertical: 10 }}>
                      Remove FaceID
                    </Text>
                  </MenuOption>
                  <MenuOption onSelect={() => this.updateInputVal(true, 'isSupportPageVisible')} >
                    <Text style={{ fontSize: 18, marginVertical: 10 }}>
                      Need help?
                    </Text>
                  </MenuOption>
                </MenuOptions>
              </Menu>
            </View>
          </MenuProvider>
        </View>


        <View style={styles.qrlocation}>
          <TouchableOpacity
            onPress={() => this.updateInputVal(true, 'isQRcodeVisible')}>
            <View>
              <Icon size={30} name="qrcode" color="#e3d966" backgroundColor="#e3d966" ></Icon>
            </View>
          </TouchableOpacity>
        </View>


        <Modal
          isVisible={this.state.isQRcodeVisible}>
          <View style={styles.qrStyle}>

            <View style={{ position: 'absolute', top: 10, left: 10 }}>
              <TouchableOpacity //BUG WITH QR CODE NOT CLOSING ON ANDROID
                onPress={() => this.updateInputVal(false, 'isQRcodeVisible')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={20} name="times" backgroundColor="#4c52ba" color="white"></Icon>
                </View>
              </TouchableOpacity>
            </View>

            <View style={{ top: '20%', padding: 30, backgroundColor: "white", borderRadius: 5 }}>
              <QRCode
                value={this.state.smartID} //+ '/' + this.state.cognitoUser.signInUserSession.accessToken.jwtToken}
                size={260}
                logo={require('./logo.png')}
                logoBackgroundColor="white"
              />
            </View>

          </View>
        </Modal>

        <Modal
          isVisible={this.state.isSupportPageVisible}>
          <View style={styles.needHelp}>

            <View style={{ position: 'absolute', top: 10, left: 10 }}>
              <TouchableOpacity //BUG WITH QR CODE NOT CLOSING ON ANDROID
                onPress={() => this.updateInputVal(false, 'isSupportPageVisible')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={20} name="times" backgroundColor="#4c52ba" color="white"></Icon>
                </View>
              </TouchableOpacity>
            </View>

            <View style={{ top: '20%', padding: 10, backgroundColor: "white", borderRadius: 5 }}>
              <Text style={{ fontSize: 18 }}> For tech support please contact </Text>
              <Text style={{ fontSize: 18, fontWeight: 'bold' }}> support@shoptaki.com </Text>
            </View>
          </View>
        </Modal>
        <LinearGradient colors={['#00001a', '#000066', '#000099', '#0000cc']} style={styles.linearGradient}>
          <View >
            <View style={styles.imgView}>
              <Image
                style={styles.imgSize}
                source={require('./home/placeholder.png')}
              />
            </View>

            <Text style={styles.textStyleName}>
              {this.state.fullName}
            </Text>

            <Text style={styles.textStyleID}>
              Smart ID: {this.state.smartID}
            </Text>


            <View style={{ flexDirection: "row", justifyContent: "center" }}>

              <View style={{ flexDirection: "column" }}>
                <View style={{ flexDirection: "column" }}>
                  <Text style={styles.textStyleRtitle}>
                    Date Of Birth:
                  </Text>
                  <Text style={styles.textStyleR}>
                    {this.state.dateofBirth}
                  </Text>
                </View>

                <View style={{ flexDirection: "column" }}>
                  <Text style={styles.textStyleRtitle}>
                    Country of Origin:
                  </Text>
                  <Text style={styles.textStyleR}>
                    {this.state.countryOrigin}
                  </Text>
                </View>

                <View style={{ flexDirection: "column" }}>
                  <Text style={styles.textStyleRtitle}>
                    Affiliation:
                  </Text>
                  <Text style={styles.textStyleR}>
                    {this.state.affiliation}
                  </Text>
                </View>
              </View>


              <View style={{ flexDirection: "column" }}>
                <View style={{ flexDirection: "column" }}>
                  <Text style={styles.textStyleRtitle}>
                    Valid until:
                  </Text>
                  <Text style={styles.textStyleR}>
                    {this.state.validDate}
                  </Text>
                </View>

                <View style={{ flexDirection: "column" }}>
                  <Text style={styles.textStyleRtitle}>
                    Country of Residence:
                  </Text>
                  <Text style={styles.textStyleR}>
                    {this.state.countryRes}
                  </Text>
                </View>

                <View style={{ flexDirection: "column" }}>
                  <Text style={styles.textStyleRtitle}>
                    License:
                  </Text>
                  <Text style={styles.textStyleR}>
                    {this.state.licenceState}
                  </Text>
                </View>
              </View>

            </View>

          </View>
        </LinearGradient>

        <View style={styles.subBackground}>
          <ScrollView>
            <View style={styles.navigationContainer}>

              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => this.props.navigation.navigate('Id', {
                  userEmail: this.state.keycloakUser.email
                }
                )}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="id-card" color={"#00004d"}></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Identity</Text>
                </View>
              </TouchableOpacity>

              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => this.props.navigation.navigate('Finance')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="money" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Finance</Text>
                </View>
              </TouchableOpacity>

              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => this.props.navigation.navigate('Medical', {
                  userEmail: this.state.keycloakUser.email
                }
                )}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="medkit" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Medical</Text>
                </View>
              </TouchableOpacity>

              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => console.log('empty icon')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="university" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>eGoverment</Text>
                </View>
              </TouchableOpacity>
              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => console.log('empty icon')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="phone" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Communication</Text>
                </View>
              </TouchableOpacity>
              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => console.log('empty icon')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="plane" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Travel</Text>
                </View>
              </TouchableOpacity>
              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => console.log('empty icon')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="graduation-cap" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Education</Text>
                </View>
              </TouchableOpacity>
              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => console.log('empty icon')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="calendar" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Events</Text>
                </View>
              </TouchableOpacity>

              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => console.log('empty icon')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="users" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Family</Text>
                </View>
              </TouchableOpacity>
              <TouchableOpacity style={[styles.wrapper, { width: 125 }]}
                onPress={() => console.log('empty icon')}>
                <View>
                  <Icon style={{ textAlign: "center" }} size={50} name="briefcase" color={"#00004d"} ></Icon>
                  <Text style={[styles.listText, { textAlign: "center" }]}>Employment</Text>
                </View>
              </TouchableOpacity>
            </View>
          </ScrollView>
        </View>
        {/* </LinearGradient> */}
      </View>
    );
  }
}


const styles = StyleSheet.create({
  container: {
    flex: 1,
    display: "flex",
    // justifyContent: 'center',
    // alignItems: 'center',
    padding: 0,
    // height:"100%"
    // backgroundColor: '#fff'
  },
  mainBackground: {
    justifyContent: 'center',
    position: 'absolute',
    top: 0,
    width: '100%',
    height: '50%',
    position: 'absolute',
    zIndex: 2,
    backgroundColor: '#4c52ba',
    // borderBottomEndRadius: 40,
    // borderBottomStartRadius: 40
  },
  subBackground: {
    top: 0,
    width: '100%',
    height: '100%',
    marginHorizontal: '5%',
    // // backgroundColor: '#f5f5f0',
    // zIndex: 2,
    // position: 'absolute',

  },
  qrlocation: {
    position: 'absolute',
    top: '5%',
    right: 15,
    zIndex: 2,
  },
  settinglocation: {
    position: 'absolute',
    top: 40,
    left: 15,
    zIndex: 2,
  },
  qrStyle: {
    width: '100%',
    height: '90%',
    alignItems: "center",
    // backgroundColor: "#4c52ba",
    borderTopEndRadius: 10,
    borderTopStartRadius: 10,
    borderBottomEndRadius: 30,
    borderBottomStartRadius: 30
  },
  needHelp: {
    width: '100%',
    height: '20%',
    alignItems: "center",
    // backgroundColor: "#4c52ba",
    borderTopEndRadius: 10,
    borderTopStartRadius: 10,
    borderBottomEndRadius: 30,
    borderBottomStartRadius: 30
  },
  textStyleR: {
    fontSize: 12,
    color: '#fff',
    marginBottom: 15,
    marginStart: 60,
    marginEnd: 5
  },
  textStyleRtitle: {
    fontSize: 14,
    fontWeight: "bold",
    marginEnd: 40,
    marginStart: 60,
    color: '#ffffff',
  },
  textStyleName: {
    fontSize: 24,
    color: '#fff',
    marginBottom: 5,
    fontWeight: 'bold',
    alignSelf: "center",
  },
  textStyleID: {
    fontSize: 16,
    color: '#fff',
    marginBottom: 20,
    alignSelf: "center",
  },
  imgSize: {
    width: 125,
    height: 125,
    borderWidth: 10,
    borderRadius: 20,
    borderColor: '#3e428c',
  },
  imgView: {
    alignItems: 'center',
    justifyContent: 'center',
  },
  wrapper: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-around",
    // height:104,
    // backgroundColor:'#ffff99',
    marginVertical: 5,
    marginHorizontal: 5,
    // width:280,
    // borderRadius:50,
    // shadowColor:"#ccffff",
    //         shadowOffset: {
    //           width: 0,
    //           height: 1,
    //         },
    //         shadowOpacity: 0.25,
    //         shadowRadius: 3.84,
    //         elevation: 15,  

  },
  navigationContainer: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    flexDirection: "row",
    flexWrap: 'wrap',
    paddingTop: 10,
    right: 15,
    // backgroundColor:"pink",
    // borderRadius:20
  },
  listText: {
    fontSize: 17,
    color: '#000033',
    alignSelf: "center",
  },
  linearGradient: {
    opacity: 0.98,
  },
});